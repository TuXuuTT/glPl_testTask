<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>company</groupId>
    <artifactId>glPltestTask</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Test task test suite</name>
    <properties>
        <!--<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->
        <!--<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>-->

        <source.version>1.8</source.version>
        <target.version>1.8</target.version>

        <!-- Dependencies versions -->
        <testng.version>6.9.10</testng.version>
        <selenium.version>2.49.1</selenium.version> <!--can be removed if selenium inherited from An D framework-->
        <hamcrest.version>1.3</hamcrest.version>
        <annotations.version>13.0</annotations.version>

        <log4j.version>2.5</log4j.version>
        <aspectj.version>1.8.4</aspectj.version>
        <allure.version>1.4.20</allure.version>
        <selenide.version>3.1.3</selenide.version>

        <restAssured.version>2.8.0</restAssured.version>
        <minimalJson.version>0.9.4</minimalJson.version>
        <javaMail.version>1.5.5</javaMail.version>

        <!-- Plugins version -->
        <compiler.plugin.version>3.5.1</compiler.plugin.version>
        <surefire.plugin.version>2.19.1</surefire.plugin.version>

        <testng.memory.opts>-Xmx1g</testng.memory.opts>

        <log4jConfFile>log4j2.xml</log4jConfFile>

        <!--default test suite, can be overridden if using maven profile or by setting system variable-->
        <testng.suitexmlfile>testng_dflt.xml</testng.suitexmlfile>
    </properties>

    <dependencies>
        <!-- Custom dependencies start -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ru.yandex.qatools.allure</groupId>
            <artifactId>allure-testng-adaptor</artifactId>
            <version>${allure.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>selenide</artifactId>
            <version>${selenide.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${restAssured.version}</version>
        </dependency>
        <dependency>
            <groupId>com.eclipsesource.minimal-json</groupId>
            <artifactId>minimal-json</artifactId>
            <version>${minimalJson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>${javaMail.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.plugin.version}</version>
                <configuration>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                    <!-- http://stackoverflow.com/questions/2237803/can-i-obtain-method-parameter-name-using-java-reflection -->
                    <compilerArguments>
                        <parameters/>
                    </compilerArguments>
                    <source>${source.version}</source>
                    <target>${target.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <log4j.configurationFile>${log4jConfFile}</log4j.configurationFile>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/suite/${testng.suitexmlfile}</suiteXmlFile>
                    </suiteXmlFiles>
                    <testFailureIgnore>false</testFailureIgnore>
                    <argLine>
                        -javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar
                    </argLine>
                    <!--only for 1.3.* TestNG adapters. Since 1.4.0.RC4, the listener adds via ServiceLoader-->
                    <!--<properties>-->
                    <!--<property>-->
                    <!--<name>listener</name>-->
                    <!--<value>ru.yandex.qatools.allure.testng.AllureTestListener</value>-->
                    <!--</property>-->
                    <!--</properties>-->
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <!--These properties variables will be set only if one of the profiles activated. All default property values are set in env.properties file. Any of them can be overridden if specified as command line argument-->
    <!-- In order to execute maven goal for one of profiles you should specify maven profile during run, to set values to non-default variables.
    Without specifying profile you will have to manually set -Dkey=value for each missing profile-specific variable. -->
    <profiles>
        <profile>
            <id>qaSmoke_env-non_default</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>non_default</value>
                </property>
            </activation>
            <properties>
                <app.url>placeHolder</app.url>
                <users.login>placeHolder</users.login>
                <users.password>placeHolder</users.password>
                <testng.suitexmlfile>placeHolder</testng.suitexmlfile>
            </properties>
        </profile>
    </profiles>
</project>
